name: PR Open Automation
on:
  pull_request:
    types: [opened]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  automate:
    runs-on: ubuntu-latest
    steps:
      - name: Apply labels from .github/labeler.yml
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Assign Reviewer (r? or Random)
        uses: actions/github-script@v7
        with:
          script: |
            // --- CONFIGURATION ---
            // ⚠️ ADD YOUR LIST OF REVIEWERS HERE
            const all_reviewers = ['nilotpal-n7'];
            // --- END CONFIGURATION ---

            const pr_body = context.payload.pull_request.body;
            const pr_number = context.payload.pull_request.number;
            const pr_author = context.payload.pull_request.user.login;
            let reviewer_to_assign;

            const regex = /r\?\s*@([a-zA-Z0-9-]+)/;
            const match = pr_body.match(regex);

            if (match) {
              // 1. Found `r? @user` in the PR message
              reviewer_to_assign = match[1];
              console.log(`Found explicit reviewer: ${reviewer_to_assign}`);
            } else {
              // 2. Not found. Pick a random reviewer.
              // Filter out the PR author so they can't be assigned their own PR
              const potential_reviewers = all_reviewers.filter(user => user !== pr_author);
              const random_index = Math.floor(Math.random() * potential_reviewers.length);
              reviewer_to_assign = potential_reviewers[random_index];
              console.log(`Assigning random reviewer: ${reviewer_to_assign}`);
            }

            if (reviewer_to_assign) {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number,
                reviewers: [reviewer_to_assign]
              });
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: `✅ Reviewer assignment: @${reviewer_to_assign} has been assigned for review.`
              });
            } else {
              console.log('Could not determine a reviewer to assign.');
            }

      - name: CC Owners based on Labels
        uses: actions/github-script@v7
        with:
          script: |
            // --- CONFIGURATION ---
            // ⚠️ MAP YOUR LABELS TO YOUR TEAMS/OWNERS HERE
            const label_to_owner = {
              'area: flutter': '@team-flutter',
              'area: backend': '@team-backend',
              'area: web': '@team-frontend',
              'type: ci/cd': '@team-devops' // Example
            };
            // --- END CONFIGURATION ---

            const pr_labels = context.payload.pull_request.labels.map(label => label.name);
            const owners_to_cc = new Set();

            for (const label of pr_labels) {
              if (label_to_owner[label]) {
                owners_to_cc.add(label_to_owner[label]);
              }
            }

            if (owners_to_cc.size > 0) {
              const comment_body = `🔔 FYI: ${[...owners_to_cc].join(', ')} (CC'ing you based on PR labels for changes in your area.)`;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: comment_body
              });
            } else {
              console.log('No owners to CC for these labels.');
            }
            
      - name: Comment PR Checklist
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✅ **Automated checks triggered**
            - [ ] CI jobs passing
            - [ ] Reviewer approval
            - [ ] Ready label applied